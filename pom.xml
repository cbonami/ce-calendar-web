<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>be.acerta.ce</groupId>
    <artifactId>ce-calendar-web</artifactId>
    <version>0.0.1-SNAPSHOT</version>

    <name>ce-calendar-web</name>
    <description>Acerta Connect Evolution Calendar Mgmt -- web layer</description>
    <packaging>jar</packaging>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>
        <node.version>v16.2.0</node.version>
        <npm.version>7.16.0</npm.version>

        <axon.version>4.5.1</axon.version>
        <spring-boot.version>2.5.0</spring-boot.version>

        <atmosphere.version>2.7.2</atmosphere.version>
        <atmosphere-hazelcast.version>2.6.4</atmosphere-hazelcast.version>
        <atmosphere-spring.version>2.6.4</atmosphere-spring.version>
        <start-class>be.acerta.ce.calendar.CalendarWebApplication</start-class>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.axonframework</groupId>
                <artifactId>axon-bom</artifactId>
                <version>${axon.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- ATMOSPHERE -->
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-runtime</artifactId>
            <version>${atmosphere.version}</version>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-jersey</artifactId>
            <version>${atmosphere.version}</version>
        </dependency>
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-spring</artifactId>
            <version>${atmosphere-spring.version}</version>
        </dependency>
        <!--
        <dependency>
            <groupId>org.atmosphere</groupId>
            <artifactId>atmosphere-hazelcast</artifactId>
            <version>${atmosphere-hazelcast.version}</version>
        </dependency>
        <dependency>
            <groupId>com.hazelcast</groupId>
            <artifactId>hazelcast</artifactId>
            <version>3.12.12</version>
        </dependency>
        -->
        <dependency>
            <groupId>javax.inject</groupId>
            <artifactId>javax.inject</artifactId>
            <version>1</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <jvmArguments>
                        -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005
                    </jvmArguments>
                    <mainClass>${start-class}</mainClass>
                </configuration>
                <!-- this is necessary as we're not using the Boot parent -->
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.12.0</version>

                <!-- optional -->
                <configuration>
                    <workingDirectory>src/main/angular</workingDirectory>
                    <installDirectory>${project.build.directory}</installDirectory> <!-- /target -->
                    <nodeVersion>${node.version}</nodeVersion>
                    <!-- optional: with node version greater than 4.0.0 will use npm provided by node distribution -->
                    <npmVersion>${npm.version}</npmVersion>
                    <!-- optional: where to download node and npm from. Defaults to https://nodejs.org/dist/ -->
                    <!--<downloadRoot>https://nodejs.org/dist/</downloadRoot>-->
                </configuration>

                <executions>

                    <execution>
                        <!-- optional: you don't really need execution ids, but it looks nice in your build log. -->
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                        </goals>
                        <!-- optional: default phase is "generate-resources" -->
                        <phase>generate-resources</phase>
                    </execution>

                    <execution>
                        <id>npm install</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <!-- optional: default phase is "generate-resources" -->
                        <!--<phase>generate-resources</phase>-->

                        <configuration>
                            <!-- optional: The default argument is actually
                            "install", so unless you need to run some other npm command,
                            you can remove this whole <configuration> section.
                            -->
                            <arguments>install</arguments>
                        </configuration>
                    </execution>

                    <execution>
                        <id>npm run-script build</id>
                        <goals>
                            <goal>npm</goal>
                        </goals>

                        <configuration>
                            <arguments>run-script build</arguments>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <delete dir="src/main/resources/static"/>
                                <echo>Copy angular to static</echo>
                                <copy toDir="src/main/resources/static" failonerror="false">
                                    <fileset dir="src/main/angular/dist">
                                        <include name="**/*"/>
                                    </fileset>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>

    </build>
</project>